
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Project4(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
assign HEX0[6:0] = ~Digital0;
assign HEX1[6:0] = ~Digital1;
assign HEX2[6:0] = ~Digital2;
assign HEX3[6:0] = ~Digital3;
assign HEX4[6:0] = ~Digital4;
assign HEX5[6:0] = ~Digital5;

assign HEX0[7] = 1; // turn off dp
assign HEX1[7] = 1;
assign HEX2[7] = 1;
assign HEX3[7] = 1; // turn off dp
assign HEX4[7] = 1;
assign HEX5[7] = 1;

assign LEDR = LEDn;

wire selectbutton = ~KEY[0];
wire incbutton = ~KEY[1];
wire [9:0] LEDn;
wire clk = MAX10_CLK1_50;
wire switch = SW[0];
wire resetswitch = SW[1];
wire flag;
wire [6:0] Digital0;
wire [6:0] Digital1;
wire [6:0] Digital2;
wire [6:0] Digital3;
wire [6:0] Digital4;
wire [6:0] Digital5;
reg[2:0] statereg;

parameter idle = 2'b00;
parameter choose = 2'b01;
parameter waiting= 2'b10;
parameter display=2'b11;


initial begin 
statereg = idle;
end

always @(posedge clk)
begin
	case(statereg)
		idle:		if(switch) 			statereg <= choose;
					else					statereg <= idle;
					
		choose:	if(switch & flag)			statereg <= waiting;
					else if(!switch )			statereg <= idle;
					else 									statereg <= choose;
		
		waiting:	if(switch & !flag )			statereg <= display;
					else if(!switch )			statereg <= idle;
					else							statereg <= waiting;
					
		display:	if(!switch )			statereg <= idle;
					else					statereg <= display;
					
		default: 						statereg <= idle;
	endcase
end

//=======================================================
//  Structural coding
//=======================================================

game gaming(clk,statereg,selectbutton,incbutton,flag,Digital0,Digital1,Digital2,Digital3,Digital4,Digital5,LEDn,resetswitch);


endmodule
